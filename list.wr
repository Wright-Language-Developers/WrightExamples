#?! Wright Linked list implementation.

use std.prelude.Optional
use std.iterator.Iterator

class LinkedListNode<T> {
	var prev:  Optional<LinkedListNode<T>>,
	var inner: T,
	var next:  Optional<LinkedListNode<T>>,
}

pub class LinkedList<T> {
	var first: Optional<LinkedListNode<T>>,
	var last:  Optional<LinkedListNode<T>>,
	mut size:  unsigned 
}

pub class LinkedListIterator<T> {
	mut inner: Optional<LinkedListNode<T>>,
	mut index: unsigned
}

impl<T> Constructor for LinkedList<T> {
	fn new(self) -> Self {
		self.
	} 
}